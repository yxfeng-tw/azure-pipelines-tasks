parameters:
  os: ''

steps:

# Clean
- checkout: self
  clean: true

# Only when building on Windows:
- ${{ if eq(parameters.os, 'Windows_NT') }}:

  # Start collect diagnostics
  - powershell: ./ci/start-collect-diagnostics.ps1
    displayName: Start collect diagnostics
    condition: and(succeeded(), eq(variables.collect_diagnostics, 'true'))

# Use node 8, npm 5
- task: NodeTool@0
  displayName: Use node 8
  inputs:
    versionSpec: "8.x"

- script: npm i -g npm@6.9.0 --force
  displayName: Use npm version 6.9.0

# npm install
- script: npm install
  displayName: npm install

# Filter out unchanged tasks
- script: node ./ci/filter-tasks.js
  displayName: Filter out unchanged tasks
  env:
    PACKAGE_ENDPOINT: $(Package.Endpoint)
    PACKAGE_TOKEN: $(Package.Token)

# Verify min agent version demands
- script: |
    cd ci
    cd verifyMinAgentDemands
    npm install
    node index.js
  displayName: Verify all min agent demands are valid

# Build
- script: node make.js build --task "$(task_pattern)"
  displayName: Build
  condition: ne(variables['numTasks'], 0)

# Only on Windows:
- ${{ if eq(parameters.os, 'Windows_NT') }}:

  # Stage tasks individually into the package directory
  - script: node ./ci/stage-package.js individually
    displayName: Stage tasks individually into the package directory
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'), ne(variables['numTasks'], 0))

  # Sign all task zips as nuget packages
  - template: sign-all-tasks.yml
    parameters:
      layoutRoot: $(Build.SourcesDirectory)\_package\tasks-layout

  # Stage all the tasks into a single zip for upload
  - script: node ./ci/stage-package.js
    displayName: Stage all the tasks into a single zip for upload
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'), ne(variables['numTasks'], 0))

  # Publish artifact
  - task: PublishBuildArtifacts@1
    displayName: Publish package artifact
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'), ne(variables['numTasks'], 0))
    inputs:
      pathToPublish: _package/tasks.zip
      artifactName: package
      publishLocation: container

# Test
- script: node make.js test
  displayName: Test with node 6
  condition: ne(variables['numTasks'], 0)
- script: node make.js testLegacy --task "$(task_pattern)"
  displayName: Legacy tests with node 6
  condition: ne(variables['numTasks'], 0)

# Only when building on Windows:
- ${{ if eq(parameters.os, 'Windows_NT') }}:

  # Stop collect diagnostics
  - powershell: ./ci/stop-collect-diagnostics.ps1
    displayName: Stop collect diagnostics
    condition: and(always(), eq(variables.collect_diagnostics, 'true'), ne(variables['numTasks'], 0))

  - powershell: |
      # Build the release branch name
      $currentSprint = (Invoke-WebRequest https://whatsprintis.it/sprint -Headers @{"Accept"= "application/json"} | ConvertFrom-Json).sprint
      $releaseBranch = "releases/m" + $currentSprint
      # Push branch to git
      git checkout -b $releaseBranch
      git push https://$(GitHubPAT)@github.com/microsoft/azure-pipelines-tasks $releaseBranch
    condition: and(succeeded(), in(variables['build.reason'], 'Schedule', 'Manual'), eq(variables['COURTESY_PUSH'], 'true'))
    displayName: Push release branch 
