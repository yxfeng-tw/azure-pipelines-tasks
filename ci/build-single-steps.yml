steps:

# Clean
- checkout: self
  clean: true

# Start collect diagnostics
- powershell: ./ci/start-collect-diagnostics.ps1
  displayName: Start collect diagnostics
  condition: and(succeeded(), eq(variables.os, 'Windows_NT'), eq(variables.collect_diagnostics, 'true'))

# Use node 8, npm 5
- task: NodeTool@0
  displayName: Use node 8
  inputs:
    versionSpec: "8.x"

# npm install
- script: npm install
  displayName: npm install

# Verify min agent version demands
- script: |
    cd ci
    cd verifyMinAgentDemands
    npm install
    node index.js
  displayName: Verify all min agent demands are valid

# Build
- script: node make.js build --task "$(task)"
  displayName: Build

# Stage hotfix
- script: node ./ci/stage-hotfix.js individually
  condition: and(succeeded(), eq(variables.os, 'Windows_NT'))
  displayName: Stage tasks individually into the package directory

# Sign task zip as nuget packages
- template: sign-all-tasks.yml
  parameters:
    layoutRoot: $(Build.SourcesDirectory)\_package\tasks-layout

# Stage hotfix
- script: node ./ci/stage-hotfix.js
  condition: and(succeeded(), eq(variables.os, 'Windows_NT'))
  displayName: Stage all the tasks into a single zip for upload

# Publish hotfix artifact
- task: PublishBuildArtifacts@1
  displayName: Publish hotfix artifact
  condition: and(succeeded(), eq(variables.os, 'Windows_NT'))
  inputs:
    pathToPublish: _package/hotfix-layout
    artifactName: hotfix
    publishLocation: container

# Test
- script: node make.js test
  displayName: Test with node 6
- script: node make.js testLegacy --task "$(task)"
  displayName: Legacy tests with node 6

# Publish test results
- task: PublishTestResults@2
  displayName: Publish Test Results test-*.xml
  inputs:
    testResultsFiles: 'test-*.xml'
    testRunTitle: 'Node 6 Test Results'
    searchFolder: '$(System.DefaultWorkingDirectory)/testresults'

# Stop collect diagnostics
- powershell: ./ci/stop-collect-diagnostics.ps1
  displayName: Stop collect diagnostics
  condition: and(always(), eq(variables.os, 'Windows_NT'), eq(variables.collect_diagnostics, 'true'))
